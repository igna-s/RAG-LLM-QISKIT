{
  "name": "My RAG WorkFlow",
  "nodes": [
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "mode": "id",
          "value": "rag_collection"
        },
        "embeddingBatchSize": 50,
        "options": {}
      },
      "id": "a9073230-4136-49ab-886e-85e9374ed019",
      "name": "Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        416,
        144
      ],
      "typeVersion": 1.2,
      "credentials": {
        "qdrantApi": {
          "id": "sFfERYppMeBnFNeA",
          "name": "Local QdrantApi database"
        }
      }
    },
    {
      "parameters": {
        "model": "mxbai-embed-large:latest"
      },
      "id": "8f9936aa-fcde-421c-bbcf-9040e317932a",
      "name": "Embeddings Ollama",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "position": [
        416,
        480
      ],
      "typeVersion": 1,
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "id": "816ef18e-88d6-4265-8143-63b6cf037d15",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        608,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkSize": 500,
        "chunkOverlap": 50,
        "options": {}
      },
      "id": "44fc55fa-b78d-4be6-9dc5-ef2db3b5e93d",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        608,
        720
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Data Ingestion\n## Add data to the semantic database",
        "height": 908,
        "width": 1432,
        "color": 3
      },
      "id": "90732e56-1cdd-4e20-945c-9c0975623f8e",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -528,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.user_prompt }}",
        "options": {
          "systemMessage": "={{ $json.system_prompt }}"
        }
      },
      "id": "30f9e37c-a678-4b82-84db-e285df290d02",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1472,
        1056
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "model": "llama3.2:latest",
        "options": {}
      },
      "id": "b6f8f74c-1ab0-41c3-b18e-a5ca4df84c2f",
      "name": "Ollama Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "position": [
        1312,
        1296
      ],
      "typeVersion": 1,
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "id"
      },
      "id": "9033b6fb-23b7-4c8a-9898-8fa751f3bb65",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        1488,
        1296
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "data_retriever",
        "toolDescription": "Retrieve data from a semantic database to answer questions",
        "qdrantCollection": {
          "__rl": true,
          "mode": "id",
          "value": "rag_collection"
        },
        "includeDocumentMetadata": false,
        "options": {}
      },
      "id": "202e7f9d-a70e-4983-ab02-1b0a019d932e",
      "name": "Qdrant Vector Store1",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        1536,
        1424
      ],
      "typeVersion": 1.2,
      "credentials": {
        "qdrantApi": {
          "id": "sFfERYppMeBnFNeA",
          "name": "Local QdrantApi database"
        }
      }
    },
    {
      "parameters": {
        "model": "mxbai-embed-large:latest"
      },
      "id": "668875aa-a7a8-4133-98b9-378c13e19170",
      "name": "Embeddings Ollama1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOllama",
      "position": [
        1536,
        1616
      ],
      "typeVersion": 1,
      "credentials": {
        "ollamaApi": {
          "id": "xHuYe0MDGOs9IpBW",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "content": "# Procesamiento de datos\n## Procesamiento previo a la invocación ...",
        "height": 908,
        "width": 1952,
        "color": 4
      },
      "id": "75fd461d-7c15-4cd0-b3db-60a05292ad21",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        928,
        0
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $json['repo-github'].owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $json['repo-github'].owner }}/{{ $json['repo-github'].name }}",
          "mode": "url"
        },
        "filePath": "={{ $json['repo-github']['snippets-path'] }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1424,
        304
      ],
      "id": "2c54f0c5-4e5d-4243-8a5a-829a9dd1a667",
      "name": "Snippets",
      "webhookId": "0f576d05-825f-474f-9c59-0ecd17b0b0dc",
      "credentials": {
        "githubApi": {
          "id": "uBKzF4rTCQm2nHgd",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $json['repo-github'].owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $json['repo-github'].owner }}/{{ $json['repo-github'].name }}",
          "mode": "url"
        },
        "filePath": "={{ $json['repo-github']['prompts-path'] }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1424,
        528
      ],
      "id": "5a4b143f-932b-447f-8a13-1fcfa6c35892",
      "name": "Prompts",
      "webhookId": "0c0fa06d-a9dc-4624-a270-7691afad516a",
      "credentials": {
        "githubApi": {
          "id": "uBKzF4rTCQm2nHgd",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $json['repo-github'].owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $json['repo-github'].owner }}/{{ $json['repo-github'].name }}",
          "mode": "url"
        },
        "filePath": "={{ $json['repo-github']['data-ingestion-path'] }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        48,
        416
      ],
      "id": "86541f91-9b61-489b-8558-69570d1df031",
      "name": "Taxonomía y QRNs",
      "webhookId": "0f576d05-825f-474f-9c59-0ecd17b0b0dc",
      "credentials": {
        "githubApi": {
          "id": "uBKzF4rTCQm2nHgd",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b8cf3f0d-60ad-488c-bf0e-342fca61034d",
              "name": "repo-github.owner",
              "value": "jose-manuel-suarez",
              "type": "string"
            },
            {
              "id": "609c6d74-1353-450e-b3b3-8c26ddf3ae78",
              "name": "repo-github.name",
              "value": "qiskit_rag",
              "type": "string"
            },
            {
              "id": "c734f48d-2ac7-4094-8424-0fa6508c7546",
              "name": "repo-github.data-ingestion-path",
              "value": "data-ingestion/",
              "type": "string"
            },
            {
              "id": "0ea63c02-e8aa-4985-bc39-1fe4b84e6da3",
              "name": "repo-github.data-rag-chatbot-path",
              "value": "data-rag-chatbot/",
              "type": "string"
            },
            {
              "id": "f7494b16-c156-46db-87bc-c74f5d4a7bcb",
              "name": "repo-github.snippets-path",
              "value": "data-rag-chatbot/snippets/",
              "type": "string"
            },
            {
              "id": "cc3a374a-6468-4820-be03-f86972042d89",
              "name": "repo-github.prompts-path",
              "value": "data-rag-chatbot/prompts/",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -208,
        416
      ],
      "id": "c539e949-6a05-4e40-9836-d05c78c8f1cf",
      "name": "Seteo de campos globales1"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        992,
        400
      ],
      "id": "235fe560-0111-4210-a5d8-1497a18bc8ea",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b8cf3f0d-60ad-488c-bf0e-342fca61034d",
              "name": "repo-github.owner",
              "value": "jose-manuel-suarez",
              "type": "string"
            },
            {
              "id": "609c6d74-1353-450e-b3b3-8c26ddf3ae78",
              "name": "repo-github.name",
              "value": "qiskit_rag",
              "type": "string"
            },
            {
              "id": "c734f48d-2ac7-4094-8424-0fa6508c7546",
              "name": "repo-github.data-ingestion-path",
              "value": "data-ingestion/",
              "type": "string"
            },
            {
              "id": "0ea63c02-e8aa-4985-bc39-1fe4b84e6da3",
              "name": "repo-github.data-rag-chatbot-path",
              "value": "data-rag-chatbot/",
              "type": "string"
            },
            {
              "id": "f7494b16-c156-46db-87bc-c74f5d4a7bcb",
              "name": "repo-github.snippets-path",
              "value": "data-rag-chatbot/snippets/",
              "type": "string"
            },
            {
              "id": "cc3a374a-6468-4820-be03-f86972042d89",
              "name": "repo-github.prompts-path",
              "value": "data-rag-chatbot/prompts/",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1184,
        400
      ],
      "id": "6a9a2393-ffe5-46a3-8d4a-95edea062fa4",
      "name": "Seteo de campos globales"
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1632,
        528
      ],
      "id": "41e795ca-b09e-494c-ad1e-b16b0cd44845",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1632,
        304
      ],
      "id": "91d2186a-edc5-4113-8115-1de86e148c09",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "content": "# RAG ChatBot\n## Chat with your data",
        "height": 796,
        "width": 1184
      },
      "id": "fd153ff4-7610-43a5-bda2-5951e4c83e0e",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        928,
        944
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Tomar los dos registros del array y asignarlos a campos específicos\nconst items = $input.all();\nif (items.length >= 2) {\n  const newItem = {\n    system_prompt: items[0].json.data,\n    user_prompt: items[1].json.data\n  }\n  return [newItem];\n} else {\n  throw new Error('Se esperaban al menos 2 registros de entrada');\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1824,
        528
      ],
      "id": "d2be622e-6dc0-420c-8df2-8ea6874d7853",
      "name": "Prompts del sistema y de usuario"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "535abfda-dac7-490b-8c83-3a36c56dea3a",
              "name": "snippet_name",
              "value": "={{ $('Snippets').item.json.name }}",
              "type": "string"
            },
            {
              "id": "adc34deb-619c-47cc-a3ae-004c0143b811",
              "name": "python_code",
              "value": "={{ $data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1840,
        304
      ],
      "id": "dff0562c-7f0f-49ee-96c6-673be554fd0c",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2064,
        304
      ],
      "id": "4ebc15d8-80ee-4b4f-8326-135621189510",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0f0c4f55-707d-4885-9647-d626a022dd50",
              "leftValue": "={{ $json.snippet_name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2288,
        288
      ],
      "id": "9f98c64d-1861-424a-a900-f45fc2b6aea1",
      "name": "Filter"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2464,
        512
      ],
      "id": "69e206e9-9d7a-46c9-ba9a-9a1460b3c590",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "// Iterar sobre cada snippet y reemplazar {qiskit_snippet} en user_prompt\nconst items = $input.all();\n\n// items[0] contiene los prompts base (system_prompt y user_prompt)\n// items[1] contiene el snippet actual del loop\nconst basePrompts = items[0].json;\nconst currentSnippet = items[1].json;\n\nconst results = [];\n\nif (currentSnippet && currentSnippet.python_code) {\n  const processedItem = {\n    json: {\n      system_prompt: basePrompts.system_prompt,\n      user_prompt: basePrompts.user_prompt.replace(\n        '{qiskit_snippet}',\n        currentSnippet.python_code\n      ),\n      snippet_name: currentSnippet.snippet_name || 'unknown'\n    },\n    pairedItem: currentSnippet.pairedItem\n  };\n  results.push(processedItem);\n}\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2656,
        512
      ],
      "id": "52f867e6-ec09-4c2d-876d-8446d462903d",
      "name": "Code"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "=https://github.com/{{ $json['repo-github'].owner }}",
          "mode": "url"
        },
        "repository": {
          "__rl": true,
          "value": "=https://github.com/{{ $json['repo-github'].owner }}/{{ $json['repo-github'].name }}",
          "mode": "url"
        },
        "filePath": "={{ $json['repo-github']['snippets-path'] }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        1840,
        1056
      ],
      "id": "29cb1a64-45e4-42b7-b936-0e3e80b2d057",
      "name": "Guardando resultados",
      "webhookId": "0f576d05-825f-474f-9c59-0ecd17b0b0dc",
      "credentials": {
        "githubApi": {
          "id": "uBKzF4rTCQm2nHgd",
          "name": "GitHub account"
        }
      }
    }
  ],
  "pinData": {
    "HTTP Request": [
      {
        "json": {
          "data": "You are a quantum software engineering expert specializing in Qiskit migrations. Your task is to analyze a Qiskit code snippet against a provided Qiskit migration taxonomy for version {qiskit_version} and generate a structured Markdown table. Focus on precision in mapping deprecated/legacy code lines to the taxonomy and provide actionable refactoring recommendations.\n\nMarkdown table:\n- **Output Table Format:**  \n  | Line | Code | Scenario Id | Scenario | Artifact | Refactoring |   \n  | :-: | :- | :-: | :- | :- | :- | \n\n**Columns:**  \n  1. **Line:** snippet code line number.\n  2. **Code:** exact code snippet line.\n  3. **Scenario Id:** the proper identifier of this scenario in the source taxonomy or '*' value if no match is found.\n  4. **Scenario:** combine the taxonomy’s \"Type\" and \"Summary\" columns (e.g., `Deprecation -> function_name() function_name deprecated`). If the upgrade is not mandatory in the target version add `(optional)`.\n  5. **Artifact:** use the exact affected artifact from the taxonomy (column 'Artifacts').\n  6. **Refactoring:** recommended update for versions = {qiskit_version}, keep it empty if you are not sure or it does not fit.\n\n**Taxonomy Mapping:**  \n   - Map each line of the input python snippet that needs to be migrated to the Qiskit target version ({qiskit_version}) with the scenario id of the taxonomy.\n   - In the case of detecting a line of code that needs to be refactored based on your previous knowledge but do not find a match with the taxonomy, the column **Scenario Id** must be filled with value '*' (only for that column) and complete the rest of the row if you can.\n   - If a line matches multiple scenarios (e.g., multiple deprecated imports), create separate rows for each artifact.\n   - For the mapping and identification of matches between qiskit lines and the taxonomy it is crucial that the columns `Code`, `Scenario` and `Artifact` are closely related to each other or matches with the line to be refactored and the replacement example makes sense.\n   - To establish the coincidence between taxonomy scenarios and code fragment lines, it is essential to consider the similarity of the `Pre-migration code` column of the taxonomy, as well as for the suggested `Refactoring`, the use of the `Post-migration code` column of the taxonomy but adapted to variable names and correct context of the analyzed code fragment.\n\n**Refactoring Precision:**\n   - If the provided code is perfectly compatible in the target version, the requested markdown table should be empty.\n   - Ensure suggestions match the artifact’s migration path (e.g., `plot_anything` → `plot_anything`).\n  \n**Example:**    \n| 5 | `from qiskit.module import submodule` | 25 | Deprecation -> qiskit.module module deprecated | qiskit.module | `from qiskit import submodule` | "
        }
      },
      {
        "json": {
          "data": "Analyze the Qiskit **code snippet** below using exclusively your prior knowledge for version 0.46.0 in addition to your prior knowledge for populate the expected markdown table with all detected refactoring scenarios. Do not add any explanation or extra information.\n\n**Code Snippet:**  \n```python  \n{qiskit_snippet}\n```"
        }
      }
    ]
  },
  "connections": {
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Ollama1": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "Snippets": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompts": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Taxonomía y QRNs": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Seteo de campos globales1": {
      "main": [
        [
          {
            "node": "Taxonomía y QRNs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Seteo de campos globales",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Seteo de campos globales": {
      "main": [
        [
          {
            "node": "Snippets",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Prompts del sistema y de usuario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompts del sistema y de usuario": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "2c7d92ed-f2f8-49b0-9bae-9f43d937fdd5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "KUZkdj4w4Vcr7jpc",
  "tags": []
}